// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Session.ts should create 1`] = `
Array [
  Object {
    "date": 2020-01-01T07:00:00.000Z,
    "name": "session_created",
    "payload": Object {
      "accountId": "accountId",
      "agent": Object {
        "browser": "browser",
        "geoIp": Object {
          "geoIp": "geoIp",
        },
        "os": "os",
        "platform": "platform",
        "source": "source",
        "version": "version",
      },
      "authenticated": true,
      "authorization": Object {
        "codeChallenge": "codeChallenge",
        "codeMethod": "codeMethod",
        "deviceChallenge": "deviceChallenge",
        "email": "email@lindorm.io",
        "id": "id",
        "otpCode": "otpCode",
        "redirectUri": "redirectUri",
        "responseType": "responseType",
      },
      "clientId": "clientId",
      "deviceId": "deviceId",
      "expires": 2020-01-01T07:00:00.000Z,
      "grantType": "grantType",
      "refreshId": "refreshId",
      "scope": Array [
        "scope",
      ],
    },
  },
]
`;

exports[`Session.ts should get agent 1`] = `
Object {
  "browser": "browser",
  "geoIp": Object {
    "geoIp": "geoIp",
  },
  "os": "os",
  "platform": "platform",
  "source": "source",
  "version": "version",
}
`;

exports[`Session.ts should get authorization 1`] = `
Object {
  "codeChallenge": "codeChallenge",
  "codeMethod": "codeMethod",
  "deviceChallenge": "deviceChallenge",
  "email": "email@lindorm.io",
  "id": "id",
  "otpCode": "otpCode",
  "redirectUri": "redirectUri",
  "responseType": "responseType",
}
`;

exports[`Session.ts should get clientId 1`] = `"clientId"`;

exports[`Session.ts should get grantType 1`] = `"grantType"`;

exports[`Session.ts should get scope 1`] = `
Array [
  "scope",
]
`;

exports[`Session.ts should get/set accountId 1`] = `"accountId"`;

exports[`Session.ts should get/set accountId 2`] = `"new-accountId"`;

exports[`Session.ts should get/set accountId 3`] = `
Array [
  Object {
    "date": 2020-01-01T07:00:00.000Z,
    "name": "session_account_id_changed",
    "payload": Object {
      "accountId": "new-accountId",
    },
  },
]
`;

exports[`Session.ts should get/set authenticated 1`] = `true`;

exports[`Session.ts should get/set authenticated 2`] = `false`;

exports[`Session.ts should get/set authenticated 3`] = `
Array [
  Object {
    "date": 2020-01-01T07:00:00.000Z,
    "name": "session_authenticated_changed",
    "payload": Object {
      "authenticated": false,
    },
  },
]
`;

exports[`Session.ts should get/set expires 1`] = `2020-01-01T07:00:00.000Z`;

exports[`Session.ts should get/set expires 2`] = `2020-12-31T23:00:01.000Z`;

exports[`Session.ts should get/set expires 3`] = `
Array [
  Object {
    "date": 2020-01-01T07:00:00.000Z,
    "name": "session_expires_changed",
    "payload": Object {
      "expires": 2020-12-31T23:00:01.000Z,
    },
  },
]
`;

exports[`Session.ts should get/set refreshId 1`] = `"refreshId"`;

exports[`Session.ts should get/set refreshId 2`] = `"new-refreshId"`;

exports[`Session.ts should get/set refreshId 3`] = `
Array [
  Object {
    "date": 2020-01-01T07:00:00.000Z,
    "name": "session_refresh_id_changed",
    "payload": Object {
      "refreshId": "new-refreshId",
    },
  },
]
`;

exports[`Session.ts should have all data 1`] = `
Session {
  "_accountId": "accountId",
  "_agent": Object {
    "browser": "browser",
    "geoIp": Object {
      "geoIp": "geoIp",
    },
    "os": "os",
    "platform": "platform",
    "source": "source",
    "version": "version",
  },
  "_authenticated": true,
  "_authorization": Object {
    "codeChallenge": "codeChallenge",
    "codeMethod": "codeMethod",
    "deviceChallenge": "deviceChallenge",
    "email": "email@lindorm.io",
    "id": "id",
    "otpCode": "otpCode",
    "redirectUri": "redirectUri",
    "responseType": "responseType",
  },
  "_clientId": "clientId",
  "_created": 2020-01-01T07:00:00.000Z,
  "_deviceId": "deviceId",
  "_events": Array [],
  "_expires": 2020-01-01T07:00:00.000Z,
  "_grantType": "grantType",
  "_id": "be3a62d1-24a0-401c-96dd-3aff95356811",
  "_refreshId": "refreshId",
  "_scope": Array [
    "scope",
  ],
  "_updated": 2020-01-01T07:00:00.000Z,
  "_version": 0,
}
`;

exports[`Session.ts should have optional data 1`] = `
Session {
  "_accountId": null,
  "_agent": Object {
    "browser": null,
    "geoIp": null,
    "os": null,
    "platform": null,
    "source": null,
    "version": null,
  },
  "_authenticated": false,
  "_authorization": Object {
    "codeChallenge": "codeChallenge",
    "codeMethod": "codeMethod",
    "deviceChallenge": null,
    "email": "email@lindorm.io",
    "id": "id",
    "otpCode": null,
    "redirectUri": "redirectUri",
    "responseType": "responseType",
  },
  "_clientId": "clientId",
  "_created": 2020-01-01T07:00:00.000Z,
  "_deviceId": null,
  "_events": Array [],
  "_expires": 2020-01-01T07:00:00.000Z,
  "_grantType": "grantType",
  "_id": "be3a62d1-24a0-401c-96dd-3aff95356811",
  "_refreshId": null,
  "_scope": Array [
    "scope",
  ],
  "_updated": 2020-01-01T07:00:00.000Z,
  "_version": 0,
}
`;
